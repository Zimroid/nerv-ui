.cell {
    display: flex;
    height: 100%;
    width: 800%;
    justify-content: center;
    align-items: center;
    position: relative;
}

.connector {
    position: absolute;
    display: flex;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: auto;
    opacity: 0;
}

.connector + label {
    position: absolute;
    display: flex;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: auto;
    justify-content: center;
    align-items: center;
}

.connector:not([disabled]) + label {
    cursor: pointer;
}

.connectorDisplay {
    --connectorColor: red;

    position: absolute;
    display: flex;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 60%;
    height: 80%;
    margin: auto;
    background-color: var(--connectorColor);
    border-radius: 5px;
    opacity: 1;
    transition: background-color 0s;
    transition-delay: 0.6s;
}

.connectorDisplayLeft {
    --connectorColor: red;

    position: absolute;
    display: flex;
    top: 0;
    bottom: 0;
    left: 0;
    width: 45%;
    height: 100%;
    background-color: var(--connectorColor);
    border-radius: 5px 0 0 5px;
    transition: left 0.2s;
    transition-delay: 0.5s;
}

.connectorDisplayLeft::before {
    content: '';
    position: absolute;
    display: flex;
    top: 0;
    left: 99%;
    width: 20%;
    height: 33%;
    background-color: var(--connectorColor);
}

.connectorDisplayLeft::after {
    content: '';
    position: absolute;
    display: flex;
    bottom: 0;
    left: 99%;
    width: 20%;
    height: 33%;
    background-color: var(--connectorColor);
}

.connectorDisplayRight {
    --connectorColor: red;

    position: absolute;
    display: flex;
    top: 0;
    bottom: 0;
    right: 0;
    width: 45%;
    height: 100%;
    background-color: var(--connectorColor);
    border-radius: 0 5px 5px 0;
    transition: right 0.2s;
    transition-delay: 0.5s;
}

.connectorDisplayRight::before {
    content: '';
    position: absolute;
    display: flex;
    top: 0;
    bottom: 0;
    right: 99%;
    width: 20%;
    height: 33%;
    margin: auto;
    background-color: var(--connectorColor);
}

.connectorTextWrapper {
    --textColor: white;

    z-index: 1;
    width: 50%;
    color: var(--textColor);
    height: 80%;
    margin: auto;
    transition: top 0s, left, 0s, color 0s;
    transition-delay: 0.5s;
    font-size: 80%;
    font-weight: 700;
    
    position: absolute;
    top: 0;
    bottom: 0;
    left: 25%;
    display: flex;
    align-items: center;
}

.connectorText {
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.inited .connector:not(:checked) + label .connectorTextWrapper {
    animation: blink 0.5s;
}

.connector:not(:checked) + label .connectorTextWrapper {
    --errorTextColor: black;

    color: var(--errorTextColor);
    top: 0;
    bottom: 30%;
    left: 20%;
    font-size: 60%;
    height: 70%;
    pointer-events: none;
    width: 20%;
}

.inited .connector:checked + label .connectorTextWrapper {
    animation: blink2 0.5s;
    transition-delay: 0.6s;
}

@keyframes blink {
    0% { opacity: 1; }
    19% { opacity: 1; }

    20% { opacity: 0; }
    39% { opacity: 0; }

    40% { opacity: 1; }
    59% { opacity: 1; }

    60% { opacity: 0; }
    79% { opacity: 0; }

    80% { opacity: 1; }
    99% { opacity: 1; }

    100% { opacity: 0; }
}
@keyframes blink2 {
    0% { opacity: 1; }
    19% { opacity: 1; }

    20% { opacity: 0; }
    39% { opacity: 0; }

    40% { opacity: 1; }
    59% { opacity: 1; }

    60% { opacity: 0; }
    79% { opacity: 0; }

    80% { opacity: 1; }
    99% { opacity: 1; }

    100% { opacity: 0; }
}

.connector:not(:checked) + label .connectorDisplay {
    background-color: transparent;
    transition-delay: 0.4s;
}

.connector:not(:checked) + label .connectorDisplayLeft {
    left: -10%;
}

.connector:not(:checked) + label .connectorDisplayRight {
    right: -10%;
}

.cable {
    height: 100%;
    width: 100%;
}

.cable svg path {
    d: path('M 49 50 L 90 50 C 105 50 105 50 120 50 L 170 50 M 751 50 L 710 50 C 695 50 695 50 680 50 L 630 50');
    transition: d 0.2s;
    transition-delay: 0.5s;
}

.connector:not(:checked) + label .cable svg path {
    d: path('M 49 50 L 70 50 C 85 -20 85 120 100 50 L 170 50 M 751 50 L 730 50 C 715 -20 715 120 700 50 L 630 50');
}